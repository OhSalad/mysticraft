plugins {
	id 'fabric-loom' version '1.10.1'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven {
		name = "Fabric"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/releases/"
	}
	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me/"
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"mysticraft" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
			// Configure Fabric API data generation (new way for Loom 1.6+)
			// The line below was causing an error, so it's commented out for now.
			// fabricApiDatagenClient()
			// If you specifically need data generation later, you can try uncommenting it
			// or investigate the correct syntax for Loom 1.7.4 if it has changed.
		}
	}
	// If you need access widener files, configure them here:
	// accessWidenerPath = file("src/main/resources/mysticraft.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
}

processResources {
	inputs.property "version", project.version
	inputs.property "loader_version", project.loader_version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "modmenu_version", project.modmenu_version
	inputs.property "fabric_version", project.fabric_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"loader_version": project.loader_version,
				"minecraft_version": project.minecraft_version,
				"modmenu_version": project.modmenu_version,
				"fabric_version": project.fabric_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 21
}

java {
	withSourcesJar()
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName}" }
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}
	repositories {
		// Configure repositories for publishing your mod if needed
	}
}